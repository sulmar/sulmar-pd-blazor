@page "/tickets/create"
@rendermode InteractiveServer
@using Blazored.FluentValidation
@inject NavigationManager NavigationManager
@inject ITicketRepository repository

<SubPageTitle>Create a Ticket</SubPageTitle>


<EditForm Model="@ticket" class="mb-6" OnValidSubmit="OnSubmitAsync">

    <FluentValidationValidator />

    @* <ValidationSummary /> *@

    <div class="form-group">
        <label class="form-label">Title
            <InputText @bind-Value="ticket.Title" class="form-control" />

            <ValidationMessage For="()=>ticket.Title" />
        </label>
    </div>

    <div class="form-group">
        <label class="form-label">Description
            <InputTextArea @bind-Value="ticket.Description" class="form-control" />

             <ValidationMessage For="()=>ticket.Description" />
        </label>
</div>

 <button type="submit" class="btn btn-primary">Submit</button>

</EditForm>

@code {

    Ticket ticket = new Ticket();

    private async Task OnSubmitAsync()
    {
        Console.WriteLine($"Create a ticket {ticket.Title} {ticket.Description}");

        repository.Add(ticket);

        NavigationManager.NavigateTo("/tickets");
    }
}